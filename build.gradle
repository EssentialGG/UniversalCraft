// For those who want the bleeding edge
buildscript {
    ext.kotlin_version = "1.5.21"

    def mcVersionStr = project.name.tokenize('-')[0]
    def (major, minor, patch) = mcVersionStr.tokenize('.')
    def mcVersion = "${major}${minor.padLeft(2, '0')}${(patch ?: '').padLeft(2, '0')}" as int
    def fabric = mcVersion >= 11400 && project.name.endsWith("-fabric")
    project.ext.mcVersion = mcVersion
    project.ext.mcVersionStr = mcVersionStr
    project.ext.mcPlatform = fabric ? 'fabric' : 'forge'
    project.ext.fabric = fabric

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven {
            name = "fabric"
            url = "https://maven.fabricmc.net/"
        }
        if (!fabric) {
            maven {
                name = "forge"
                url = "https://maven.minecraftforge.net"
            }
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
        if (fabric) {
            classpath 'fabric-loom:fabric-loom.gradle.plugin:0.8-SNAPSHOT'
        } else if (mcVersion >= 11400) {
            classpath('net.minecraftforge.gradle:ForgeGradle:5.1.20') { // exact version cause FG tends to break stuff
                exclude group: 'trove', module: 'trove' // preprocessor/idea requires more recent one
            }
        } else {
            classpath('com.github.ReplayMod:ForgeGradle:' + (
                    mcVersion >= 11200 ? '717a9f4' : // FG 2.3
                    mcVersion >= 10904 ? '83163c1' : // FG 2.2
                                         '4be84bf'   // FG 2.1
            ) + ':all') {
                exclude group: 'net.sf.trove4j', module: 'trove4j' // preprocessor/idea requires more recent one
                exclude group: 'trove', module: 'trove' // different name same thing
            }
        }
    }
}

def FG3 = !fabric && mcVersion >= 11400
def FG2 = !fabric && mcVersion < 11400
def FABRIC = fabric

if (FABRIC) {
    apply plugin: 'fabric-loom'
} else if (FG3) {
    apply plugin: 'net.minecraftforge.gradle'
} else {
    apply plugin: 'net.minecraftforge.gradle.forge'
}
apply plugin: 'kotlin'
apply plugin: 'com.replaymod.preprocess'
apply plugin: 'maven-publish'

preprocess {
    vars.put("MC", mcVersion)
    vars.put("FABRIC", project.fabric ? 1 : 0)
    vars.put("FORGE", project.fabric ? 0 : 1)
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

    maven { url 'https://jitpack.io' }
}

version = project.parent.version
group = "gg.essential" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "UniversalCraft" + project.name

kotlin.jvmToolchain {
    languageVersion = JavaLanguageVersion.of(mcVersion >= 11700 ? 16 : 8)
}
compileJava.options.encoding = 'UTF-8'

if (mcVersion >= 11400) {
    sourceSets {
        api
    }
}

if (FABRIC) {
    minecraft {
        runConfigs.all {
            ideConfigGenerated = true
        }
    }
} else {
    minecraft {
        if (FG3) {
            runs {
                client {
                    workingDirectory rootProject.file('run')
                    property 'forge.logging.console.level', 'info'
                    mods {
                        examplemod {
                            source sourceSets.main
                        }
                    }
                }
            }
        } else {
            runDir = "run"
        }

        if (!FG3) {
            version = [
                    11202: '1.12.2-14.23.0.2486',
                    11201: '1.12.1-14.22.0.2444',
                    11200: '1.12-14.21.1.2387',
                    11102: '1.11.2-13.20.0.2216',
                    11100: '1.11-13.19.1.2188',
                    11002: '1.10.2-12.18.2.2099',
                    10904: '1.9.4-12.17.0.1976',
                    10809: '1.8.9-11.15.1.2318-1.8.9',
                    10800: '1.8-11.14.4.1563',
                    10710: '1.7.10-10.13.4.1558-1.7.10',
            ][mcVersion]
            mappings = [
                    11404: "snapshot_20190719-1.14.3",
                    11202: "snapshot_20170615",
                    11201: "snapshot_20170615",
                    11200: "snapshot_20170615",
                    11102: "snapshot_20161220",
                    11100: "snapshot_20161111",
                    11002: "snapshot_20160518",
                    10904: "snapshot_20160518",
                    10809: "stable_22",
                    10800: "snapshot_nodoc_20141130",
                    10710: "stable_12",
            ][mcVersion]
        } else if (mcVersion < 11700) {
            mappings channel: 'snapshot', version: [
                    11502: '20200220-1.15.1',
                    11602: '20201028-1.16.3',
            ][mcVersion]
        } else {
            mappings channel: 'official', version: mcVersionStr
        }
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    if (FABRIC) {
        minecraft 'com.mojang:minecraft:' + [
                11404: '1.14.4',
                11502: '1.15.2',
                11601: '1.16.1',
                11602: '1.16.2',
                11701: '1.17.1',
        ][mcVersion]
        mappings 'net.fabricmc:yarn:' + [
                11404: '1.14.4+build.16',
                11502: '1.15.2+build.14',
                11601: '1.16.1+build.17:v2',
                11602: '1.16.2+build.47:v2',
                11701: '1.17.1+build.39:v2',
        ][mcVersion]
        modImplementation 'net.fabricmc:fabric-loader:0.11.6'
    }

    if (FG3) {
        minecraft 'net.minecraftforge:forge:' + [
                11404: '1.14.4-28.1.113',
                11502: '1.15.2-31.1.18',
                11602: '1.16.2-33.0.58',
                11701: '1.17.1-37.0.41',
        ][mcVersion]
    }
}


// Some workaround for FG2 (don't ask me) which is not required for FG3+/Loom
if (mcVersion <= 11202) {
    task moveResources {
        doLast {
            ant.move file: "${buildDir}/resources/main",
                    todir: "${buildDir}/classes/java"
        }
    }

    moveResources.dependsOn processResources
    classes.dependsOn moveResources
}

processResources {
    inputs.property "version", project.version

    filesMatching(['fabric.mod.json']) {
        expand 'version': project.version
    }
}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes(
                'FMLModType': 'LIBRARY'
        )
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = "universalcraft-$mcVersionStr-$mcPlatform"

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.implementation.allDependencies.each {
                    if (it.group != null && !it.group.contains("net_fabricmc") && !it.group.contains("net.fabricmc") && it.name != null && it.name != "forge" && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }

            artifact FABRIC ? remapJar : jar
            artifact sourcesJar
        }
    }

    if (project.hasProperty("nexus_user") && project.hasProperty("nexus_password")) {
        repositories {
            maven {
                name 'nexus'
                url "https://repo.sk1er.club/repository/maven-releases/"

                credentials {
                    username project.nexus_user
                    password project.nexus_password
                }
            }
        }
    }
}


